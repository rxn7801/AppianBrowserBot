{"id":"RobotBrowserTemplate","robotType":"ROBOT","mainClass":"com.novayre.jidoka.robot.test.RobotBrowserTemplate","actions":["start","openBrowser","navigateToWeb","closeBrowser","end"],"conditionalActions":[],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n     * Action \"start\"\n     *\n     * @throws Exception\n     */\npublic void start() throws Exception {\n    server = (IJidokaServer<?>) JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n}"},{"id":"openBrowser","implementation":"/**\n     * Open Web Browser\n     *\n     * @throws Exception\n     */\npublic void openBrowser() throws Exception {\n    lastName = server.getParameters().get(\"lastName\");\n    policyNumber = server.getParameters().get(\"policyNumber\");\n    postCode = server.getParameters().get(\"postCode\");\n    dateOfBirth = server.getParameters().get(\"dateOfBirth\");\n    resultMap.put(\"matchFound\", \"false\");\n    browser = IWebBrowserSupport.getInstance(this, client);\n    browserType = server.getParameters().get(\"Browser\");\n    // Select browser type\n    if (StringUtils.isBlank(browserType)) {\n        server.info(\"Browser parameter not present. Using the default browser CHROME\");\n        browser.setBrowserType(EBrowsers.CHROME);\n        browserType = EBrowsers.CHROME.name();\n    } else {\n        EBrowsers selectedBrowser = EBrowsers.valueOf(browserType);\n        browser.setBrowserType(selectedBrowser);\n        server.info(\"Browser selected: \" + selectedBrowser.name());\n    }\n    // Set timeout to 60 seconds\n    browser.setTimeoutSeconds(60);\n    // Init the browser module\n    browser.initBrowser();\n    server.setNumberOfItems(1);\n}"},{"id":"navigateToWeb","implementation":"/**\n     * Navigate to Web Page\n     *\n     * @throws Exception\n     */\npublic void navigateToWeb() throws Exception {\n    server.setCurrentItem(1, HOME_URL);\n    // Navegate to HOME_URL address\n    browser.navigate(HOME_URL);\n    //Tihis command is uses to make visible in the desktop the page (IExplore issue)\n    if (browserType.equals(\"IE\")) {\n        client.clickOnCenter();\n        client.pause(3000);\n    }\n    By lName = By.xpath(\"/html/body/div/div/div[1]/form/table/tbody/tr[1]/td/div/input\");\n    By dob = By.xpath(\"/html/body/div/div/div[1]/form/table/tbody/tr[2]/td/div/input\");\n    By pol = By.xpath(\"/html/body/div/div/div[1]/form/table/tbody/tr[3]/td/div/input\");\n    By pCode = By.xpath(\"/html/body/div/div/div[1]/form/table/tbody/tr[4]/td/div/input\");\n    browser.textFieldSet(lName, lastName, true);\n    browser.textFieldSet(dob, dateOfBirth, true);\n    browser.textFieldSet(pol, policyNumber, true);\n    browser.textFieldSet(pCode, postCode, true);\n    browser.clickOnElement(By.xpath(\"/html/body/div/div/div[1]/form/div/input\"));\n    By message = By.id(\"message\");\n    boolean isMessageExists = browser.existsElement(message);\n    if (!isMessageExists) {\n        By tableId = By.id(\"customer\");\n        WebElement table = browser.getElement(tableId);\n        List<WebElement> th = table.findElements(By.tagName(\"th\"));\n        int lastNamePos = 0;\n        int postCodePos = 0;\n        int dobPos = 0;\n        int policyNoPos = 0;\n        for (int i = 0; i < th.size(); i++) {\n            if (\"Last Name\".equalsIgnoreCase(th.get(i).getText())) {\n                lastNamePos = i + 1;\n            } else if (\"Date of Birth\".equalsIgnoreCase(th.get(i).getText())) {\n                dobPos = i + 1;\n            } else if (\"Policy #\".equalsIgnoreCase(th.get(i).getText())) {\n                policyNoPos = i + 1;\n            } else if (\"Post Code\".equalsIgnoreCase(th.get(i).getText())) {\n                postCodePos = i + 1;\n            }\n        }\n        List<WebElement> lastNameElements = table.findElements(By.xpath(\"//tr/td[\" + lastNamePos + \"]\"));\n        List<WebElement> dobElements = table.findElements(By.xpath(\"//tr/td[\" + dobPos + \"]\"));\n        List<WebElement> policyElements = table.findElements(By.xpath(\"//tr/td[\" + policyNoPos + \"]\"));\n        List<WebElement> postCodeElements = table.findElements(By.xpath(\"//tr/td[\" + postCodePos + \"]\"));\n        for (int i = 0; i < lastNameElements.size(); i++) {\n            WebElement e = lastNameElements.get(i);\n            if (e.getText().trim().equalsIgnoreCase(lastName)) {\n                if (dobElements.get(i).getText().trim().equalsIgnoreCase(dateOfBirth) && policyElements.get(i).getText().trim().equalsIgnoreCase(policyNumber) && postCodeElements.get(i).getText().trim().equalsIgnoreCase(postCode)) {\n                    resultMap.put(\"matchFound\", \"true\");\n                    break;\n                }\n            }\n        }\n    } else\n        resultMap.put(\"matchFound\", \"false\");\n}"},{"id":"closeBrowser","implementation":"/**\n     * Close Browser\n     *\n     * @throws Exception\n     */\npublic void closeBrowser() throws Exception {\n    close();\n    server.setCurrentItemResultToOK(\"Success\");\n}"},{"id":"end","implementation":"/**\n     * Action \"end\"\n     *\n     * @throws Exception\n     */\npublic void end() throws Exception {\n    server.setResultProperties(resultMap);\n}"}],"conditionalActionDetails":[],"sdkMethods":[]}